@inject SignInManager<IdentityUser> SignInManager


@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var sidebarLinks = new[]
    {
        new {Id = "profile", AspPage = "Index", Name = "Profile", NavClass  = @ManageNavPages.IndexNavClass(ViewContext)},
        
        new {Id = "email", AspPage = "Email", Name = "Email", NavClass  = @ManageNavPages.EmailNavClass(ViewContext)},
        
        new {Id = "change-password", AspPage = "ChangePassword", Name = "Password", NavClass  = @ManageNavPages.ChangePasswordNavClass(ViewContext)},
        
        new {Id = "external-logins", AspPage = "ExternalLogins", Name = "External logins", NavClass  = @ManageNavPages.ExternalLoginsNavClass(ViewContext)},
        
        new {Id = "two-factor", AspPage = "TwoFactorAuthentication", Name = "2FA", NavClass  = @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)},

        new {Id = "personal-data", AspPage = "PersonalData", Name = "Personal", NavClass  = @ManageNavPages.PersonalDataNavClass(ViewContext)},
    };
}


<ul class="flex h-full w-full flex-col overflow-y-auto overflow-x-hidden p-2">
    @foreach (var link in sidebarLinks)
    {
        @if (link.Id == "external-logins" && !hasExternalLogins)
        {
            continue;
        }
        else
        {
            <li class="w-full"><a class="tracking-[2px] flex w-full items-center justify-center py-2 font-semibold uppercase text-[11px] hover:text-black @link.NavClass" id="@link.Id" asp-page="./@link.AspPage">@link.Name</a></li>
        }
    }
</ul>